/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nomis.operationsManagement;

import com.nomis.ovc.business.VulnerabilityStatus;
import com.nomis.ovc.dao.DaoUtility;
import com.nomis.ovc.util.AppConstant;
import com.nomis.reports.utils.Indicator;
import java.util.ArrayList;
import java.util.List;
import javax.servlet.http.HttpSession;

/**
 *
 * @author smomoh
 */
public class VulnerabilityStatusManager 
{
    public static VulnerabilityStatus getTeenMother()
    {
        VulnerabilityStatus vs=new VulnerabilityStatus();
        //vs.setCode("18v");
        //vs.setName("Teen mother");
        return vs;
    }
    public static Indicator getVulnerabilityStatusIndicator(String vulnerabilityStatusId)
    {
        Indicator indicator=null;
        try
        {
            DaoUtility util=new DaoUtility();
            VulnerabilityStatus vs=util.getVulnerabilityStatusDaoInstance().getVulnerabilityStatus(vulnerabilityStatusId);
            if(vs !=null)
            {
                indicator=Indicator.getInstance();
                indicator.setIndicatorId(vs.getVulnerabilityStatusId());
                indicator.setIndicatorName("Number of "+vs.getVulnerabilityStatusName());
                indicator.setIndicatorType(AppConstant.OVC_TYPE);
                indicator.setIndicatorSubtype(AppConstant.VULNERABILITYSTATUS_SUBTYPE);
                indicator.setDescription("This indicator counts the number of children with vulnerability "+vs.getVulnerabilityStatusName()+" enrolled in the program");
                indicator.setMerCode("OVC_ENROLLED");
            }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return indicator;
    }
    public static List getVulnerabilityStatusIndicators()
    {
        List vulStatusIndicatorList=new ArrayList();
        try
        {
            DaoUtility util=new DaoUtility();
            List list=util.getVulnerabilityStatusDaoInstance().getAllVulnerabilityStatus();
            if(list !=null)
            {
                VulnerabilityStatus vs=null;
                for(Object obj:list)
                {
                    vs=(VulnerabilityStatus)obj;
                    Indicator indicator=Indicator.getInstance();
                    indicator.setIndicatorId(vs.getVulnerabilityStatusId());
                    indicator.setIndicatorName("Number of "+vs.getVulnerabilityStatusName());
                    indicator.setIndicatorType(AppConstant.OVC_TYPE);
                    indicator.setIndicatorSubtype("VULNERABILITYSTATUS");
                    indicator.setDescription("This indicator counts the number of children with vulnerability "+vs.getVulnerabilityStatusName()+" enrolled in the program");
                    indicator.setMerCode("OVC_ENROLLED");
                    vulStatusIndicatorList.add(indicator);
                }
            }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return vulStatusIndicatorList;
    }
    public static VulnerabilityStatus getVulnerabilityStatus(String statusCode)
    {
        VulnerabilityStatus vs=new VulnerabilityStatus();
        if(statusCode !=null)
        {
            if(statusCode.equalsIgnoreCase("1v"))
            return getTeenMother();
            /*else if(statusCode.equalsIgnoreCase("2v"))
            return getMaternalOrphan();
            else if(statusCode.equalsIgnoreCase("3v"))
            return getPaternalOrphan();
            else if(statusCode.equalsIgnoreCase("4v"))
            return getVulnerableChild();
            else if(statusCode.equalsIgnoreCase("5v"))
            return getChildOfHivPositiveCaregiver();
            else if(statusCode.equalsIgnoreCase("6v"))
            return getHivPositiveChild();
            else if(statusCode.equalsIgnoreCase("7v"))
            return getHivExposedInfant();
            else if(statusCode.equalsIgnoreCase("8v"))
            return getChildOfFemaleSexWorker();
            else if(statusCode.equalsIgnoreCase("9v"))
            return getChildAtRisk();
            else if(statusCode.equalsIgnoreCase("10v"))
            return getAbuseExploitedAndOutOfSchool();
            else if(statusCode.equalsIgnoreCase("11v"))
            return getOrphan();
            else if(statusCode.equalsIgnoreCase("12v"))
            return getChildrenOfKeyPopulations();
            else if(statusCode.equalsIgnoreCase("13v"))
            return getChildWithDisability();
            else if(statusCode.equalsIgnoreCase("14v"))
            return getChildrenOfUultraPoorHouseholds();
            else if(statusCode.equalsIgnoreCase("15v"))
            return getAdolescentGirlsAtRiskAGYW();
            else if(statusCode.equalsIgnoreCase("16v"))
            return getChildrenLivingOnStreet();
            else if(statusCode.equalsIgnoreCase("17v"))
            return getStuntedOrMalnourishedChildren();*/
            else if(statusCode.equalsIgnoreCase("18v"))
            return getTeenMother();
            else
            return vs;
        }
        else
        return vs;
    }
    public static void setMainVulnerabilityStatusForDisplay(HttpSession session) throws Exception
    {
        
        List finalList=new ArrayList();
        List subList=new ArrayList();
        String tableHtml="";
        String styleId="";
        String styleId2="";
        try
        {
            int j=0;
            DaoUtility util=new DaoUtility();
            List list=util.getVulnerabilityStatusDaoInstance().getMainVulnerabilityStatus();
            for(int i=0; i<list.size(); i+=2)
            {
                subList=new ArrayList();
                j=i;
                VulnerabilityStatus vs=(VulnerabilityStatus)list.get(j);
                subList.add(vs);
                j=i+1;
                if(j<list.size())
                {
                    VulnerabilityStatus vs2=(VulnerabilityStatus)list.get(j);
                    subList.add(vs2);
                }
                
                finalList.add(subList);
            }
            
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        session.setAttribute("mainVulnerabilityStatusList", finalList);
        //session.setAttribute("eligibilityCriteria", tableHtml);
        
    }
    public static void setOtherVulnerabilityStatusForDisplay(HttpSession session) throws Exception
    {
        
        List finalList=new ArrayList();
        List subList=new ArrayList();
        String tableHtml="";
        String styleId="";
        String styleId2="";
        try
        {
            int j=0;
            DaoUtility util=new DaoUtility();
            List list=util.getVulnerabilityStatusDaoInstance().getOtherVulnerabilityStatus();
            for(int i=0; i<list.size(); i+=2)
            {
                subList=new ArrayList();
                j=i;
                VulnerabilityStatus vs=(VulnerabilityStatus)list.get(j);
                subList.add(vs);
                j=i+1;
                if(j<list.size())
                {
                    VulnerabilityStatus vs2=(VulnerabilityStatus)list.get(j);
                    subList.add(vs2);
                }
                
                finalList.add(subList);
            }
            
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        session.setAttribute("otherVulnerabilityStatusList", finalList);
        //session.setAttribute("eligibilityCriteria", tableHtml);
        
    }
}
